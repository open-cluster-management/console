{
    "manageCredentials": "Manage credentials",
    "connection": "Credential",
    "connections": "Credentials",
    "empty.title": "No credentials found.",
    "empty.subtitle": "You don't have any credentials, yet. Select \"Add credentials\" to create the resource.",
    "add": "Add credentials",
    "edit": "Edit credentials",
    "delete": "Delete credentials",
    "delete.batch": "Delete credentials",

    "table.header.provider": "Provider",
    "table.header.name": "Name",
    "table.header.namespace": "Namespace",
    "table.header.additionalActions": "Additional actions",

    "connections.actions.enableClusterDiscovery": "Enable cluster discovery",

    "addConnection.error.noNamespacesFound": "No namespaces found.",
    "addConnection.addButton.label": "Add",
    "addConnection.addingButton.label": "Adding",
    "addConnection.saveButton.label": "Save",
    "addConnection.savingButton.label": "Saving",
    "addConnection.cancelButton.label": "Cancel",

    "editConnection.title": "Edit credentials",
    "addConnection.title": "Add credentials",
    "addConnection.title.tooltip": "A credentials stores the access credentials and configuration information for creating clusters.",
    "addConnection.connectionName.label": "Credentials name",
    "addConnection.connectionName.placeholder": "Enter the name for the credentials",
    "addConnection.connectionName.labelHelp": "The name for the credentials.",
    "addConnection.namespaceName.label": "Namespace",
    "addConnection.namespaceName.placeholder": "Select a namespace where to store the credentials",
    "addConnection.namespaceName.labelHelp": "The namespace where your connection secret is stored. You can use an existing namespace or create a namespace specifically to host your cloud connections, both for convenience and added security.",
    "addConnection.providerName.label": "Provider",
    "addConnection.providerName.placeholder": "Select a provider for the connection",
    "addConnection.providerName.labelHelp": "The infrastructure provider for the selected Kubernetes distribution.",
    "addConnection.awsAccessKeyID.label": "AWS access key ID",
    "addConnection.awsAccessKeyID.placeholder": "Enter your AWS access key ID",
    "addConnection.awsAccessKeyID.labelHelp": "You use access keys to sign programmatic requests that you make to AWS. The access key is equivalent to a username in a username/password combination.",
    "addConnection.awsSecretAccessKeyID.label": "AWS secret access key",
    "addConnection.awsSecretAccessKeyID.placeholder": "Enter your AWS secret access key",
    "addConnection.awsSecretAccessKeyID.labelHelp": "You use access keys to sign programmatic requests that you make to AWS. The secret access key is equivalent to a password in a username/password combination.",
    "addConnection.baseDomainResourceGroupName.label": "Base domain resource group name",
    "addConnection.baseDomainResourceGroupName.placeholder": "Enter your base domain resource group name",
    "addConnection.baseDomainResourceGroupName.labelHelp": "Azure Resources Groups are logical collections of virtual machines, storage accounts, virtual networks, web apps, databases, and/or database servers. Typically, users group related resources for an application, divided into groups for production and non-production.",
    "addConnection.clientId.label": "Client ID",
    "addConnection.clientId.placeholder": "Enter your client ID",
    "addConnection.clientId.labelHelp": "Your client ID. This value is generated as the 'appId' property when you create a service principal with the command: 'az ad sp create-for-rbac --role Contributor --name <service_principal>'.",
    "addConnection.clientSecret.label": "Client secret",
    "addConnection.clientSecret.placeholder": "Enter your client secret",
    "addConnection.clientSecret.labelHelp": "Your client password. This value is generated as the 'password' property when you create a service principal with the command: 'az ad sp create-for-rbac --role Contributor --name <service_principal>'.",
    "addConnection.subscriptionId.label": "Subscription ID",
    "addConnection.subscriptionId.placeholder": "Enter your subscription ID",
    "addConnection.subscriptionId.labelHelp": "Your subscription ID. This is the value of the 'id' property in the output of the command: 'az account show'",
    "addConnection.tenantId.label": "Tenant ID",
    "addConnection.tenantId.placeholder": "Enter your tenant ID",
    "addConnection.tenantId.labelHelp": "Your tenant ID. This is the value of the 'tenantId' property in the output of the command: 'az account show'",
    "addConnection.gcProjectID.label": "Google Cloud Platform project ID",
    "addConnection.gcProjectID.placeholder": "Enter your Google Cloud Platform project ID",
    "addConnection.gcProjectID.labelHelp": "A project organizes all of your Google Cloud resources. A project consists of a set of users; a set of APIs; and billing, authentication, and monitoring settings for those APIs. So, for example, all of your Cloud Storage buckets and objects, along with user permissions for accessing them, reside in a project.",
    "addConnection.gcServiceAccountKey.label": "Google Cloud Platform service account JSON key",
    "addConnection.gcServiceAccountKey.placeholder": "Enter your Google Cloud Platform service account JSON key",
    "addConnection.gcServiceAccountKey.labelHelp": "Creating a service account is similar to adding a member to your project, but the service account belongs to your applications rather than an individual end user.",
    "addConnection.vcenter.label": "vCenter server",
    "addConnection.vcenter.placeholder": "Enter your vCenter server",
    "addConnection.vcenter.labelHelp": "The fully-qualified host name or IP address of the vCenter server. The value must be defined in the vCenter server root CA certificate.",
    "addConnection.username.label": "vCenter username",
    "addConnection.username.placeholder": "Enter your vCenter username",
    "addConnection.username.labelHelp": "The name of the user that is required to access the vCenter server. This user must have at least the roles and privileges that are required for static or dynamic persistent volume provisioning in vSphere.",
    "addConnection.password.label": "vCenter password",
    "addConnection.password.placeholder": "Enter your vCenter password",
    "addConnection.password.labelHelp": "The password associated with the vCenter username.",
    "addConnection.cacertificate.label": "vCenter root CA certificate",
    "addConnection.cacertificate.placeholder": "Enter your vCenter root CA certificate",
    "addConnection.cacertificate.labelHelp": "A vCenter server root CA certificate that, when added, reduces the number of web browser certificate warnings.",
    "addConnection.vmClusterName.label": "vSphere cluster name",
    "addConnection.vmClusterName.placeholder": "Enter your vSphere cluster name",
    "addConnection.vmClusterName.labelHelp": "The name of the vSphere cluster to use.",
    "addConnection.datacenter.label": "vSphere datacenter",
    "addConnection.datacenter.placeholder": "Enter your vSphere datacenter",
    "addConnection.datacenter.labelHelp": "The name of the vSphere datacenter to use.",
    "addConnection.datastore.label": "vSphere default datastore",
    "addConnection.datastore.placeholder": "Enter your vSphere default datastore",
    "addConnection.datastore.labelHelp": "The name of the default vSphere datastore to use.",
    "addConnection.libvirtURI.label": "libvirt URI",
    "addConnection.libvirtURI.placeholder": "Enter your libvirt URI",
    "addConnection.libvirtURI.labelHelp": "The URI of the libvirt which is an open-source API, daemon and management tool for managing platform virtualization. It can be used to manage KVM, Xen, VMware ESXi, QEMU and other virtualization technologies. These APIs are widely used in the orchestration layer of hypervisors in the development of a cloud-based solution.",
    "addConnection.sshKnownHosts.label": "List of SSH known hosts",
    "addConnection.sshKnownHosts.placeholder": "Enter your list of SSH known hosts",
    "addConnection.sshKnownHosts.labelHelp": "SSH clients store host keys for hosts to which they have previously connected. These stored host keys are called known host keys, and the collection is often called known hosts.",
    "addConnection.configureDisconnectedInstall.label": "Configuration for disconnected installation",
    "addConnection.imageMirror.label": "Image registry mirror",
    "addConnection.imageMirror.placeholder": "Enter your image registry mirror",
    "addConnection.imageMirror.labelHelp": "Optional: Disconnected registry path, defined as hostname, port and repository path. It must contain all the installation images, and is used in disconnected installations. Example: repository.com:5000/openshift/ocp-release.",
    "addConnection.bootstrapOSImage.label": "Bootstrap OS image",
    "addConnection.bootstrapOSImage.placeholder": "Enter your bootstrap OS image",
    "addConnection.bootstrapOSImage.labelHelp": "This value contains the URL to the image to use for the bootstrap machine.",
    "addConnection.clusterOSImage.label": "Cluster OS image",
    "addConnection.clusterOSImage.placeholder": "Enter your cluster OS image",
    "addConnection.clusterOSImage.labelHelp": "This value contains the URL to the image to use for Red Hat OpenShift Container Platform cluster machines.",
    "addConnection.additionalTrustBundle.label": "Additional trust bundle",
    "addConnection.additionalTrustBundle.placeholder": "Enter your additional trust bundle",
    "addConnection.additionalTrustBundle.labelHelp": "This value provides the contents of the certificate file that is required to access the mirror registry.",
    "addConnection.baseDomain.label": "Base DNS domain",
    "addConnection.baseDomain.placeholder": "Enter the base DNS domain",
    "addConnection.baseDomain.labelHelp": "Optional: The base domain of your provider, which is used to create routes to your OpenShift Container Platform cluster components. It is configured in your cloud provider's DNS as a Start Of Authority (SOA) record.",
    "addConnection.baseDomain.baseDNSPeriod": "The base DNS domain must not begin with a period.",
    "addConnection.valid.name": "Must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character",
    "addConnection.pullSecret.label": "Red Hat OpenShift pull secret",
    "addConnection.pullSecret.placeholder": "Enter Red Hat OpenShift pull secret",
    "addConnection.pullSecret.labelHelp": "The pull secret that you obtained from the pull secret page on the Red Hat OpenShift Cluster Manager site. Use this pull secret to authenticate with the services that are provided by the included authorities, including Quay.io, which serves the container images for OpenShift Container Platform components.",
    "addConnection.sshPrivateKey.label": "SSH private key",
    "addConnection.sshPrivateKey.placeholder": "Enter your SSH private key",
    "addConnection.sshPrivateKey.labelHelp": "The private SSH key to use to access your cluster machines.",
    "addConnection.sshPublicKey.label": "SSH public key",
    "addConnection.sshPublicKey.placeholder": "Enter your SSH public key",
    "addConnection.sshPublicKey.labelHelp": "The public SSH key to use to access your cluster machines.",
    "addConnection.ocmapitoken.label": "OpenShift Cluster Manager API token",
    "addConnection.ocmapitoken.placeholder": "Enter the OpenShift Cluster Manager API Token",
    "addConnection.ocmapitoken.labelHelp": "The OpenShift Cluster Manager API Token can be retrieved from - https://cloud.redhat.com/openshift/token",

    "validate.kubernetesDnsName.length": "can contain at most 63 characters",
    "validate.kubernetesDnsName.char": "can only contain lowercase alphanumeric characters or '-'",
    "validate.kubernetesDnsName.startchar": "must start with an alphanumeric character",
    "validate.kubernetesDnsName.endchar": "must end with an alphanumeric character",
    "validate.publicSshKey.required": "Public key required",
    "validate.privateSshKey.required": "Private key required",
    "validate.certificate.required": "Certificate required",
    "validate.gcProjectID.format": "Must consist of 6 to 30 lowercase alphanumeric characters or '-', and must start with a letter and not end with '-'",
    "validate.json.required": "JSON required",
    "validate.libevirtURI.format": "Provide valid Libvirt URI (driver[+transport]://[username@][hostname][:port]/[path][?extraparameters] )",
    "validate.imageMirror.format": "Value must have the format HOSTNAME:PORT/PATH",
    "validate.imageMirror.port": "Port must be an integer",
    "validate.imageMirror.repositorypath": "Value for the repository path must consist of alphanumeric characters, '-', '.' or '_', and must start and end with an alphanumeric character",
    "validate.baseDnsName.char": "Must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character",
    "validate.baseDnsName.start": "The base DNS domain must not begin with a period.",

    "bulk.title.delete": "Delete credential(s)",
    "bulk.message.delete": "Deleting credential(s) is irreversible. The credentials will no longer be available for creating new clusters, but clusters that were previously created using the credential will not be affected."
}
